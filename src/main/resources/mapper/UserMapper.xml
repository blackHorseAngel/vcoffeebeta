<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vcoffeebeta.DAO.UserDAO">
    <!--查询使用的结果集-->
    <resultMap id="userMap" type="com.vcoffeebeta.domain.User">
        <id property="id" column="id"/>
        <result property="userNumber" column="user_number"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="telephoneNumber" column="telephone_number"/>
        <result property="email" column="email"/>
        <result property="isAdmin" column="isAdmin"/>
        <result property="companyId" column="company_id"/>
        <result property="accountId" column="account_id"/>
        <result property="equipmentId" column="equipment_id"/>
        <result property="state" column="state"/>
        <result property="created" column="created"/>
        <result property="modified" column="modified"/>
        <result property="createdTime" column="created_time"/>
        <result property="modifiedTime" column="modified_time"/>
    </resultMap>
    <sql id="userContent">
       id,user_number,username,password,telephone_number,email,isAdmin,company_id,account_id,equipment_id,state,created,modified,created_time,modified_time
    </sql>

    <sql id="userContentForInsert">
       user_number,username,password,telephone_number,email,isAdmin,company_id,account_id,equipment_id,state,created,modified,created_time,modified_time
    </sql>
    <!-- 新增一个用户 -->
    <insert id="insert" parameterType="com.vcoffeebeta.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="userContentForInsert"/>
        </trim>
        values
         <trim prefix="(" suffix=")" suffixOverrides=",">
            #{userNumber},
            #{username},
            #{password},
            #{telephoneNumber},
            #{email},
            #{isAdmin},
            #{companyId},
            #{accountId},
            #{equipmentId},
            #{state},
            #{created},
            #{modified},
            #{createdTime},
            #{modifiedTime}
         </trim>
    </insert>
    <!-- 根据条件查询用户信息-->
    <select id="queryByNameAndPassword" parameterType="com.vcoffeebeta.domain.User" resultMap="userMap">
        select
        <include refid="userContent"/>
        from user
        <where>
          1=1
          <if test="username != null">
            and username = #{username}
          </if>
          <if test="password != null">
              and password = #{password}
          </if>
          and state = 0
        </where>
        order by modified_time desc
    </select>
    <!-- 查询全部用户信息 -->
    <select id="findAll" resultMap="userMap">
       select  <include refid="userContent"/> from user
       <where>
         isAdmin != 2 and state = 0
           <if test="username != null">
            and username like concat('%',#{username},'%')
           </if>
       </where>
       order by modified_time desc
    </select>
    <!-- 根据id查询单个用户信息 -->
    <select id="findById" parameterType="com.vcoffeebeta.domain.User" resultMap="userMap">
       select <include refid="userContent"/> from user
       <where>
       <if test="id != 0">
           id = #{id}
       </if>
         and state = 0
       </where>
       order by modified_time desc
    </select>
    <!-- 根据公司id查询用户数 -->
    <select id="queryForAmountByCompanyId" parameterType="long" resultType="integer">
       select count(1) from user
       <where>
          company_id = #{companyId}
       </where>
    </select>
    <!-- 根据用户姓名条件查询用户 -->
    <!--<select id="queryForList" parameterType="com.vcoffeebeta.domain.User" resultMap="userMap">
        select <include refid="userContent"/> from user
        <where>
            <if test="username != null">
                username like concat('%',#{username},'%')
            </if>
        </where>
    </select>-->
    <!-- 查询总数 -->
    <select id="queryForAmount" resultType="int">
        select count(1) from user
        <where>
            1=1
            <if test="username != null">
               and username like concat('%',#{username},'%')
            </if>
            and isAdmin != 2
        </where>
    </select>
    <!-- 根据用户编号和公司id查找用户 -->
    <select id="findByUserNumberAndCompanyId" parameterType="com.vcoffeebeta.domain.User" resultMap="userMap">
        select <include refid="userContent"/> from user
        <where>
            <if test="userNumber != 0">
                user_number = #{userNumber}
            </if>
            <if test="companyId != 0">
                and company_id = #{companyId}
            </if>
            and state = 0
        </where>
    </select>
    <!-- 更新单个用户信息 -->
    <update id="update" parameterType="com.vcoffeebeta.domain.User">
        update user
        set
        <if test="username != null">
            username = #{username},
        </if>
        <if test="telephoneNumber != null">
            telephone_number = #{telephoneNumber},
        </if>
        <if test="email != null">
            email = #{email},
        </if>
        <if test="isAdmin != null">
            isAdmin = #{isAdmin},
        </if>
        <if test="accountId != 0">
            account_id = #{accountId},
        </if>
        <if test="modified != null">
            modified = #{modified},
        </if>
        <if test="modifiedTime != null">
            modified_time = #{modifiedTime}
        </if>
        <where>
            <if test="id != 0">
                id = #{id}
            </if>
            and state = 0
        </where>
    </update>
    <!-- 删除用户信息，实际上修改用户状态，0：正常用户；1：删除用户 -->
    <update id="deleteById" parameterType="long">
        update user
        set
        state = 1
        <where>
            <if test="id != 0">
                id = #{id}
            </if>
        </where>
    </update>
    <!-- 用户更改密码 -->
    <update id="changePassword" parameterType="com.vcoffeebeta.domain.User">
        update user
        set
        <if test="password != null and password != ''">
            password = #{password},
        </if>
         <if test="modified != null and modified != ''">
             modified = #{modified},
         </if>
         <if test="modifiedTime != null">
             modified_time = #{modifiedTime}
         </if>
         <where>
             <if test="id != 0">
                 id = #{id}
             </if>
         </where>
    </update>
</mapper>